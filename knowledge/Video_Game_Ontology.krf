(in-microtheory VideoGamesMt)

(comment VideoGame "A specialization of Game. All instances of VideoGame are specifications of the game genre, people involved in the making of the game, time of release, etc.")
(genls VideoGame Game)
(isa VideoGame ObjectType)
(isa VideoGame TemporalStuffType)

(comment VideoGameGenre "A specialization of ConceptualWorkTypeByGenre. All instances of VideoGameGenre are of the same genre.")
(genls VideoGameGenre ConceptualWorkTypeByGenre)
(isa FacetingCollectingType)

;;; (videoGameSystem ?game ?platform)
(isa videoGameSystem Predicate)
(arity videoGameSystem 2)
(arg1Isa videoGameSystem VideoGame)
(arg2Isa videoGameSystem VideoGameSystem)
(comment videoGameSystem "(videoGameSystem ?game ?platform) says that game ?game was released on VideoGameSystem ?platform")

;;; (videoGameGenre ?game ?genre)
(isa videoGameGenre Predicate)
(arity videoGameGenre 2)
(arg1Isa videoGameGenre VideoGame)
(arg2Isa videoGameGenre VideoGameGenre)
(comment videoGameGenre "(videoGameGenre ?game ?genre) says that game ?game has game genre ?genre")

;;; (score ?game ?score)
(isa score Predicate)
(arity score 2)
(arg1Isa score VideoGame)
(arg2Isa score Integer)
(comment score "(score ?game ?score) says that game ?game had game score ?score")

;;; (releaseYear ?game ?year)
(isa releaseYear Predicate)
(arity releaseYear 2)
(arg1Isa releaseYear VideoGame)
(arg2Isa releaseYear Integer)
(comment releaseYear "(releaseYear ?game ?year) says that game ?game was released in year ?year")

;;; (developmentStudio ?game ?studio)
(isa developmentStudio Predicate)
(arity developmentStudio 2)
(arg1Isa developmentStudio VideoGame)
(arg2Isa developmentStudio SoftwareVendor)
(comment developmentStudio "(developmentStudio ?game ?studio) says that game ?game was released by SoftwareVendor ?studio")

;;; (programmer ?game ?person)
(isa programmer Predicate)
(arity programmer 2)
(arg1Isa programmer VideoGame)
(arg2Isa programmer Person)
(comment programmer "(programmer ?game ?person) says that ?person was a programmer for ?game")

;;; (composer ?game ?person)
(isa composer Predicate)
(arity composer 2)
(arg1Isa composer VideoGame)
(arg2Isa composer Person)
(comment composer "(composer ?game ?person) says that ?person was a composer for ?game")

;;; (writer ?game ?person)
(isa writer Predicate)
(arity writer 2)
(arg1Isa writer VideoGame)
(arg2Isa writer Person)
(comment writer "(writer ?game ?person) says that ?person was a writer for ?game")

;;; (designer ?game ?person)
(isa designer Predicate)
(arity designer 2)
(arg1Isa designer VideoGame)
(arg2Isa designer Person)
(comment designer "(designer ?game ?person) says that ?person was a designer for ?game")

;;; (director ?game ?person)
(isa director Predicate)
(arity director 2)
(arg1Isa director VideoGame)
(arg2Isa director Person)
(comment director "(director ?game ?person) says that ?person was a director for ?game")

;;; (artist ?game ?person)
(isa artist Predicate)
(arity artist 2)
(arg1Isa artist VideoGame)
(arg2Isa artist Person)
(comment artist "(artist ?game ?person) says that ?person was a artist for ?game")

;;; (releaseYear ?game ?year)
(isa releaseYear Predicate)
(arity releaseYear 2)
(arg1Isa releaseYear VideoGame)
(arg2Isa releaseYear Integer)

;;; (commonGenre ?game1 ?game2 ?genre)
(isa commonGenre Relation)
(arity commonGenre 3)
(arg1Isa commonGenre VideoGame)
(arg2Isa commonGenre VideoGame)
(arg3Isa commonGenre VideoGameGenre)
(comment commonGenre "(commonGenre ?game1 ?game2 ?genre) says that ?game1 and ?game2 share ?genre")

;;; (commonProgrammer ?game1 ?game2 ?programmer)
(isa commonProgrammer Relation)
(arity commonProgrammer 3)
(arg1Isa commonProgrammer VideoGame)
(arg2Isa commonProgrammer VideoGame)
(arg3Isa commonProgrammer Person)
(comment commonProgrammer "(commonProgrammer ?game1 ?game2 ?programmer) says that ?game1 and ?game2 share ?programmer")

;;; (commonArtist ?game1 ?game2 ?artist)
(isa commonArtist Relation)
(arity commonArtist 3)
(arg1Isa commonArtist VideoGame)
(arg2Isa commonArtist VideoGame)
(arg3Isa commonArtist Person)
(comment commonArtist "(commonArtist ?game1 ?game2 ?artist) says that ?game1 and ?game2 share ?artist")

;;; (commonComposer ?game1 ?game2 ?composer)
(isa commonComposer Relation)
(arity commonComposer 3)
(arg1Isa commonComposer VideoGame)
(arg2Isa commonComposer VideoGame)
(arg3Isa commonComposer Person)
(comment commonComposer "(commonComposer ?game1 ?game2 ?composer) says that ?game1 and ?game2 share ?composer")

;;; (commonWriter ?game1 ?game2 ?writer)
(isa commonWriter Relation)
(arity commonWriter 3)
(arg1Isa ?game1 VideoGame)
(arg2Isa ?game2 VideoGame)
(arg3Isa ?writer Person)
(comment commonWriter "(commonWriter ?game1 ?game2 ?writer) says that ?game1 and ?game2 share ?writer")

;;; (commonDirector ?game1 ?game2 ?director)
(isa commonDirector Relation)
(arity commonDirector 3)
(arg1Isa ?game1 VideoGame)
(arg2Isa ?game2 VideoGame)
(arg3Isa ?director Person)
(comment commonDirector "(commonDirector ?game1 ?game2 ?director) says that ?game1 and ?game2 share ?director")

;;; (commonDesigner ?game1 ?game2 ?designer)
(isa commonDesigner Relation)
(arity commonDesigner 3)
(arg1Isa ?game1 VideoGame)
(arg2Isa ?game2 VideoGame)
(arg3Isa ?designer Person)
(comment commonDesigner "(commonDesigner ?game1 ?game2 ?designer) says that ?game1 and ?game2 share ?designer")

;;; (similarYear ?game1 ?game2)
(isa similarYear Relation)
(arity similarYear 2)
(arg1Isa ?game1 VideoGame)
(arg2Isa ?game2 VideoGame)
(comment similarYear "(similarYear ?game1 ?game2) says that ?game1 and ?game2 have release year within 5 years of each other")

;;; (gamesSharingAttribute ?game ?game1 ?rel1 ?attribute1)
(isa gamesSharingAttribute Relation)
(arity gamesSharingAttribute 4)
(arg1Isa ?game VideoGame)
(arg2Isa ?game1 VideoGame)
(arg3Isa ?rel1 Relation)

;;; (allGamesSharingAttribute ?game ?game1 ?rel1 ?attribute1 ?game2 ?rel2 ?attribute2 ?game3 ?rel3 ?attribute3)
(isa allGamesSharingAttribute Relation)

;;; (gamesSharingTwoAttributes ?game ?game1 ?rel1 ?attribute1 ?game2 ?rel2 ?attribute2)
(isa gamesSharingTwoAttributes Relation)

;;; (allGamesSharingTwoAttributes ?game ?game1 ?rel1 ?attribute1 ?game2 ?rel2 ?attribute2 ?game3 ?rel3 ?attribute3)
(isa allGamesSharingTwoAttributes Relation)

;;; (gamesSharingAllAttributes ?game ?game1 ?rel1 ?attribute1 ?game2 ?rel2 ?attribute2 ?game3 ?rel3 ?attribute3)
(isa gamesSharingAllAttributes Relation)